version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:14-alpine
    container_name: steamji_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:5432"
    networks:
      - steamji_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Strapi API 服务
  strapi:
    build:
      context: ..
      dockerfile: docker/Dockerfile.strapi
    container_name: steamji_strapi
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?ssl=false
      HOST: ${STRAPI_HOST}
      PORT: 1337
      APP_KEYS: ${APP_KEYS}
      API_TOKEN_SALT: ${API_TOKEN_SALT}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      WX_APPID: ${WX_APPID}
      WX_SECRET: ${WX_SECRET}
      QQ_APPID: ${QQ_APPID}
      QQ_SECRET: ${QQ_SECRET}
      AES_KEY: ${AES_KEY}
      CORPID: ${CORPID}
      CORPSECRET: ${CORPSECRET}
      TOUSER: ${TOUSER}
      AGENTID: ${AGENTID}
      NODE_ENV: production
    volumes:
      - strapi_uploads:/app/public/uploads
      - strapi_data:/app/.tmp
    ports:
      - "${STRAPI_EXTERNAL_PORT}:1337"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - steamji_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1337/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ASF 挂卡服务
  asf:
    image: justarchi/archisteamfarm:latest
    container_name: steamji_asf
    restart: unless-stopped
    environment:
      ASF_CONFIG_PATH: ${ASF_CONFIG_PATH}
      ASPNETCORE_URLS: http://*:1242
      ASF_IPC_PASSWORD: ${ASF_IPC_PASSWORD}
    volumes:
      - asf_config:${ASF_CONFIG_PATH}
      - ./asf-config:/tmp/asf-config
    ports:
      - "${ASF_EXTERNAL_PORT}:1242"
    networks:
      - steamji_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:1242/Api/ASF"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  strapi_data:
    driver: local
  strapi_uploads:
    driver: local
  asf_config:
    driver: local

networks:
  steamji_network:
    driver: bridge
    name: ${NETWORK_NAME}